import random
from typing import Optional

# -------------------------------
# AI Bidding Logic with Tier Ceiling & Single Increment
# -------------------------------
def ai_bid(team, player, current_bid: float, rng: random.Random, ai_increment_done: dict) -> Optional[float]:
    """
    AI bid rules:
    - Randomized hidden reserve within tier ceiling
    - AI can bid ±0.5 Cr around hidden reserve
    - Only one AI team can add +0.5 Cr above hidden reserve
    - Cannot exceed tier ceiling
    - Cannot exceed 1%-30% of team purse
    """
    if not team.has_slot() or not team.can_afford(player.base_price):
        return None

    reserve = player._hidden_reserve or player.base_price
    tier_hi = player._tier_hi or (reserve + 1.0)
    
    # Determine bid
    bid = reserve
    # AI can add ±0.5 Cr only if increment not done yet
    if not ai_increment_done.get(player.name, False):
        add_options = [-0.5, 0, 0.5]
        bid += rng.choice(add_options)
        # Limit bid to tier ceiling
        bid = min(bid, tier_hi)
        # Mark that the +0.5 increment has been used
        if bid > reserve:
            ai_increment_done[player.name] = True
    else:
        # If increment already done, bid can be reserve or -0.5
        bid = min(bid, tier_hi)

    # Cap bid based on team purse: 1%-30%
    max_allowed = team.purse * 0.3
    min_allowed = team.purse * 0.01
    bid = min(bid, max_allowed)
    bid = max(bid, min_allowed)

    # Must be higher than current bid
    if current_bid is not None and bid <= current_bid:
        return None

    # Ensure team can afford
    if bid > team.purse:
        return None

    return round(bid, 2)